- name: Receive json map from parameter
  set_fact:
    map: "{{ data_map | from_json }}"

- debug:
    msg: "{{ item }}"
  with_items: "{{ map.cfme_params }}"

- name: Fix Enum values
  include_tasks: fix_enum_values.yml
  with_items: "{{ map.cfme_params }}"

- set_fact:
    cfme_json: ""

- name: Create parameter string to send to CFME
  set_fact:
    cfme_json: '{{ cfme_json }}, "{{ item }}": "{{ vars[item] }}"'
  with_items: "{{ map.cfme_params }}" 
  when: vars[item] is defined and vars[item]

- name: Set initial service template url
  set_fact:
    url: "{{ cfme_url }}/api/service_templates"

- name: Update service template url
  set_fact:
    url: "{{ cfme_url }}/api/service_catalogs/{{ map.catalog_id }}/service_templates"
  when: map.catalog_id is defined

- name: Set initial request body
  set_fact:
    body: |
          { "action": "order",
            "resource": {
              "href" : "{{ cfme_url }}/api/service_templates/{{ map.template_id }}" {{ cfme_json }} }
          }

- name: Update request body
  set_fact:
    body: |
          { "action": "order",
            "resource": {
              "href" : "{{ cfme_url }}/api/service_templates/{{ map.template_id }}" {{ cfme_json }},
              "existing_project_name": "{{ namespace }}" }
          }
  when: map.type == "ServiceTemplateContainerTemplate"

- name: Send request
  uri:
    url: "{{ url }}"
    method: POST
    validate_certs: no
    user: "{{ cfme_user }}"
    password: "{{ cfme_password }}"
    body_format: json
    body: "{{ body }}"
